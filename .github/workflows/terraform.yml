name: Terraform
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent infinite hanging
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
        env:
          TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Terraform Init
        run: |
          echo "Starting Terraform init at $(date)"
          terraform init -upgrade=false
          echo "Terraform init completed at $(date)"
        
      - name: Terraform Validate
        run: terraform validate
        
      - name: Terraform Plan
        run: |
          echo "Starting Terraform plan at $(date)"
          # Use timeout and reduced parallelism to handle GitHub Actions network issues
          timeout 300 terraform plan -out=tfplan -refresh=false -parallelism=2 -no-color -var="instance_ami=ami-0c02fb55956c7d316"
          echo "Terraform plan completed at $(date)"
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          echo "Starting Terraform apply at $(date)"
          terraform apply tfplan -parallelism=2 -no-color
          echo "Terraform apply completed at $(date)"